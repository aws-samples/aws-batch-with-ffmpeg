# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

version: "3"

dotenv: [".env", "{{.ENV}}/.env.", "{{.HOME}}/.env"]

vars:
  IMAGE_REPO_NAME: batch-ffmpeg

includes:
  app:
    taskfile: ./application
    dir: ./application
  test:
    taskfile: ./tests
    dir: ./
    optional: true
  cdk:
    taskfile: ./cdk
    dir: ./
  dist:
    taskfile: ./deployment
    dir: ./
    optional: true

tasks:
  venv:
    desc: Create local python virtual env
    cmds:
      - rm -rf .venv/ || true
      - python3 -m venv .venv
      - .venv/bin/python3 -m pip install --upgrade pip
      - .venv/bin/pip install --quiet -r requirements.txt
      - .venv/bin/pip install --quiet -r application/requirements.txt
    sources:
      - requirements.txt
    generates:
      - .venv/bin/activate

  env:
    desc: env. variables for scripts
    cmds:
      - echo 'S3_BUCKET={{.S3_BUCKET}}' >> .env
      - echo 'IMAGE_REPO_NAME={{.IMAGE_REPO_NAME}}' >> .env
      - echo 'AWS_DEFAULT_REGION={{.AWS_DEFAULT_REGION}}' >> .env
      - echo 'AWS_ACCOUNT_ID={{.AWS_ACCOUNT_ID}}' >> .env
      - echo 'API_URL={{.API_URL}}' >> .env
    vars:
      S3_BUCKET:
        sh: aws cloudformation describe-stacks --stack-name batch-ffmpeg-stack --query 'Stacks[0].Outputs[?OutputKey==`S3bucket`].OutputValue' --output text || true
      IMAGE_REPO_NAME:
        sh: aws cloudformation describe-stacks --stack-name batch-ffmpeg-stack --query 'Stacks[0].Outputs[?OutputKey==`EcrRegistry`].OutputValue' --output text || true
      API_URL:
        sh: aws cloudformation describe-stacks --stack-name batch-ffmpeg-api-stack --query 'Stacks[0].Outputs[?OutputKey==`ffmpegbatchapi`].OutputValue' --output text || true
      AWS_ACCOUNT_ID:
        sh: aws sts get-caller-identity --query "Account" --output text || true
      AWS_DEFAULT_REGION:
        sh: aws configure get region || true
    status:
      - test -f .env
